name: workflow_dispatch  #zdj 工作流调度

on:
  push:

jobs:
  # This workflow contains a single job called "Set-matrix"
  Set-matrix:
    # The type of runner that the job will run on
    runs-on: [self-hosted]    
    # zdj：self-hosted表示不是 GitHub 提供的云服务器，而是你自己搭建或公司内部部署的机器。 如果使用云端的服务器：  runs-on: ubuntu-latest
    #zdj: onpre 在配置 自建 runner（self-hosted runner）标签（labels） 时自己定义的一个 自定义标签,  这个作用还需要理解 Setting.toml文件中有类似onpre，但是不明白如何关联到一起
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - name: Checkout this repository
        uses: actions/checkout@v3
      - name: Check pwd
        id: test_pwd
        run: |
          echo "current_path=$(pwd)"
          #cp -r ../../../../../nextpf-aubist-ci/* ./
          cp -r /home/master/Libo/DSAC_code/* ./ 
          
  build:
    runs-on: [self-hosted]
    continue-on-error: true
    needs: [Set-matrix]
    steps:
      - name: build start
        id: teat_build
        run: |
          echo "current_path=$(pwd)"
          source script/.env
          #python3 script/operation.py -m build -t ubuntu --force-gen-quit -d  release -sudo hgtpass
          python3 script/operation.py -m build -t qnx --no-cache -sudo hgtpass
          # shell: bash

  static_analyze:
    runs-on: [self-hosted]
    needs: [Set-matrix, build]
    #if: |
      #!contains(github.event.pull_request.title, 'skip ci')
      #&& (needs.generate.result == 'success' || needs.generate.result == 'skipped')
      #&& (needs.build.result == 'success' || needs.build.result == 'skipped')
      #&& !cancelled()
    #strategy:
      #fail-fast: false 
     # max-parallel: 2 
    steps:
      - name: Change dir owner to working user
        run: #echo hgtpass | sudo -S chown -R ${USER}:${USER} ${GITHUB_WORKSPACE}
          echo "static_analyze:"

      - name: Check if target was successful and run static_analyze
        id: static_analyze
        run: |
          echo "Target ubuntu build artifacts exist"
          source script/.env
          # python3 script/operation.py -m static_analyze -t ubuntu -sudo hgtpass
          python3 script/operation.py -m static_analyze -t qnx --no-cache -sudo hgtpass
        #uses: ./nextpf-third-party-actions/retry
        # if: success() && !cancelled()
        # success() ：仅当所有前置步骤都成功时才执行
        # !cancelled() ：且工作流没有被取消
        #with:
          #max_attempts: 3         # ステップが失敗するまでの試行回数
          #timeout_minutes: 60     # 試行がタイムアウトするまで待機する時間
          #retry_wait_seconds: 600 # 再試行まで待機する秒数
          #retry_on_exit_code: 4   # スクリプトからの終了コード
          #command: |
           # if [ -d "artifacts/build/ubuntu" ]; then
             # echo "Target ubuntu build artifacts exist"
              #source script/.env
              #python3 script/operation.py -m static_analyze -t ubuntu -sudo hgtpass
            #else
              #echo "Target ubuntu did not build successfully. Skipping static_analyze."
             # exit 1
            #fi
          # shell: bash

  unit_test_vm:
    runs-on: [self-hosted]
    needs: [Set-matrix, build]
    steps:
      - name: Check if target was successful and run unit_test_VM
        run: |
          echo "Target uttest build artifacts exist"
          source script/.env
          #python3 script/operation.py -m unit_test -t ubuntu --force-gen-quit -sudo hgtpass


        
